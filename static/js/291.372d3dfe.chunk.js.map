{"version":3,"file":"static/js/291.372d3dfe.chunk.js","mappings":"+SACMA,EAAU,mCACVC,EAAc,gCACdC,EAAQ,UAAMD,EAAN,sCAA+CD,GAEhDG,EAAiB,mCAAG,uGACNC,EAAAA,EAAAA,GAAMF,GADA,cACvBG,EADuB,OAEvBC,EAASD,EAASE,KAAKC,QAFA,kBAGtBF,GAHsB,2CAAH,qDAKjBG,EAAS,mCAAG,WAAMC,GAAN,0FACEN,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,gCAAuCD,EAAvC,kBAAwDU,IAD/D,cACfL,EADe,OAEfC,EAASD,EAASE,KAAKC,QAFR,kBAGdF,GAHc,2CAAH,sDAKTK,EAAY,mCAAG,WAAMC,GAAN,0FACDR,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAwBW,EAAxB,oBAAsCZ,IAD1C,cAClBK,EADkB,OAElBQ,EAAQR,EAASE,KAFC,kBAGjBM,GAHiB,2CAAH,sDAKZC,EAAY,mCAAG,WAAMF,GAAN,0FACDR,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAwBW,EAAxB,4BAA8CZ,IADlD,cAClBK,EADkB,OAElBQ,EAAQR,EAASE,KAAKQ,KAFJ,kBAGjBF,GAHiB,2CAAH,sDAKZG,EAAe,mCAAG,WAAMJ,GAAN,0FACJR,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAwBW,EAAxB,4BAA8CZ,IAD/C,cACrBK,EADqB,OAErBQ,EAAQR,EAASE,KAAKC,QAFD,kBAGpBK,GAHoB,2CAAH,qD,uICvBtBI,EAAUC,EAAAA,EAAAA,EAAH,6DAIPC,EAAkBD,EAAAA,EAAAA,GAAH,0CAGfE,EAAaF,EAAAA,EAAAA,GAAH,oHAMVG,EAAWH,EAAAA,EAAAA,GAAH,mFAKRI,EAAUJ,EAAAA,EAAAA,EAAH,2C,SCGb,EAnBgB,WACZ,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOb,GAAMc,EAAAA,EAAAA,MAANd,GAIP,OAHAe,EAAAA,EAAAA,YAAU,YACNX,EAAAA,EAAAA,IAAgBJ,GAAIgB,KAAKH,EAAY,GAAE,CAACb,KAEpC,SAACO,EAAD,UACY,IAAnBK,EAAQK,QACP,SAACZ,EAAD,wDACAO,EAAQM,KAAI,gBAAElB,EAAF,EAAEA,GAAImB,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACd,UAACZ,EAAD,YACI,SAACC,EAAD,UAAWU,KACX,SAACT,EAAD,UAAUU,MAFGpB,EADH,KASjB,C","sources":["API.js","components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from \"axios\"\nconst API_KEY = '4c232873f45eedb749cb12734938c628'\nconst ENTRY_POINT = 'https://api.themoviedb.org/3/'\nconst trending = `${ENTRY_POINT}trending/movie/day?api_key=${API_KEY}`\n\nexport const getTrendingMovies = async()=>{\n    const response = await axios(trending);\n    const movies = response.data.results;\n    return movies\n}\nexport const getMovies = async(query)=>{\n    const response = await axios(`${ENTRY_POINT}search/movie?api_key=${API_KEY}&query=${query}`);\n    const movies = response.data.results;\n    return movies\n}\nexport const getMovieInfo = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}?api_key=${API_KEY}`);\n    const movie = response.data;\n    return movie\n}\nexport const getMovieCast = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}/credits?api_key=${API_KEY}`);\n    const movie = response.data.cast;\n    return movie\n}\nexport const getMovieReviews = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}/reviews?api_key=${API_KEY}`);\n    const movie = response.data.results;\n    return movie\n}","import styled from \"@emotion/styled\";\n\nconst NoFound = styled.p`\nfont-size: 18px;\nmargin-top: 50px;\n`\nconst ReviewContainer = styled.ul`\npadding: 50px 0;\n`\nconst ReviewCard = styled.li`\nbackground-color: #545454;\nwidth: 100%;\npadding: 20px;\nmargin: 15px;\nborder-radius: 5px;`\nconst Reviewer = styled.h3`\nfont-size: 20px;\nfont-weight: 600;\nmargin-bottom: 15px;\n`\nconst Content = styled.p`\nfont-weight: 18px\n`\n\nexport {NoFound ,ReviewContainer, ReviewCard, Reviewer, Content}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"API\";\nimport { NoFound, ReviewContainer, ReviewCard, Reviewer, Content} from \"./MovieReviews.styled\";\nconst Reviews = () =>{\n    const [reviews, setReviews] = useState([])\n    const {id} = useParams();\n    useEffect(()=> {\n        getMovieReviews(id).then(setReviews)}, [id])\n\n    return  <ReviewContainer>\n    {reviews.length === 0 \n    ? <NoFound>We don`t have any reviews for this movie.</NoFound> \n    : reviews.map(({id, author, content})=> \n    <ReviewCard key={id}>\n        <Reviewer>{author}</Reviewer>\n        <Content>{content}</Content>\n    </ReviewCard> )}\n    </ReviewContainer>\n       \n    \n    \n}\nexport default Reviews"],"names":["API_KEY","ENTRY_POINT","trending","getTrendingMovies","axios","response","movies","data","results","getMovies","query","getMovieInfo","id","movie","getMovieCast","cast","getMovieReviews","NoFound","styled","ReviewContainer","ReviewCard","Reviewer","Content","useState","reviews","setReviews","useParams","useEffect","then","length","map","author","content"],"sourceRoot":""}
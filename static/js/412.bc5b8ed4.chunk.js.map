{"version":3,"file":"static/js/412.bc5b8ed4.chunk.js","mappings":"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","sources":["API.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.js","pages/Movies/MoviesSearch.style.jsx","pages/Movies/Movies.js"],"sourcesContent":["import axios from \"axios\"\nconst API_KEY = '4c232873f45eedb749cb12734938c628'\nconst ENTRY_POINT = 'https://api.themoviedb.org/3/'\nconst trending = `${ENTRY_POINT}trending/movie/day?api_key=${API_KEY}`\n\nexport const getTrendingMovies = async()=>{\n    const response = await axios(trending);\n    const movies = response.data.results;\n    return movies\n}\nexport const getMovies = async(query)=>{\n    const response = await axios(`${ENTRY_POINT}search/movie?api_key=${API_KEY}&query=${query}`);\n    const movies = response.data.results;\n    return movies\n}\nexport const getMovieInfo = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}?api_key=${API_KEY}`);\n    const movie = response.data;\n    return movie\n}\nexport const getMovieCast = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}/credits?api_key=${API_KEY}`);\n    const movie = response.data.cast;\n    return movie\n}\nexport const getMovieReviews = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}/reviews?api_key=${API_KEY}`);\n    const movie = response.data.results;\n    return movie\n}","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillStar, AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\n\nconst MovieSet = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nmargin: -10px;\n`\n const MovieCard = styled.li`\n position: relative;\n width: 300px;\nmargin: 10px;\n `\n const MovieLink = styled(Link)`\n text-decoration: none`\n \n const ImgContainer = styled.div`\n width: 100%;\n height: 350px;\n position: relative;\n `\n const Image = styled.img`\n display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;`\n\n  const Rating = styled.span`\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n  padding: 5px 10px;\n  background-color: #cf6679;\n  position: absolute;\n  top: 15px;\n  right: 0;`\n\n  const Star = styled(AiFillStar)`\n  width: 15px;\n  height: 15px;\n  margin-right: 10px;`\n\n\n  \n  const CardTitle = styled.h2`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  padding: 15px 0;\n  font-size: 18px;\n  font-weight: 600;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  `\n  const Favorite = styled.button`\n  position: absolute;\n  top: 15px;\n  left: 10px;\n  background-color: transparent;\n  border: none;\n  z-index: 12;\n  `\n  const FavoriteIcon = styled(AiOutlineHeart)`\n  width: 30px;\n  height: 30px;\n  fill: #fff;\n  `\nconst FillHeart = styled(AiFillHeart)`\nwidth: 30px;\nheight: 30px;\nfill: #fff;\n`\n  export {MovieSet, CardTitle, MovieCard, Image, Rating, ImgContainer, MovieLink, Star, Favorite, FavoriteIcon, FillHeart}","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { CardTitle, MovieCard, Image, Rating, ImgContainer, MovieSet, MovieLink, Star, Favorite, FavoriteIcon, FillHeart } from \"./MovieList.styled\";\nimport photo from 'not-found-image.jpg';\nconst EP_IMG= 'https://image.tmdb.org/t/p/w500';\n\n\n\nconst MovieList = ({set, way, state}) =>{\nconst [saved, setSaved]= useState([]);\n\nuseEffect(() => {\n   const savedFavorite = JSON.parse(window.localStorage.getItem('FavoriteMovie')) ?? [];\n   if(savedFavorite.length) {\n      setSaved(savedFavorite)  \n    }\n}, []);\n\nuseEffect(() =>{\n         if(saved.length){\n            window.localStorage.setItem('FavoriteMovie', JSON.stringify(saved)) \n         }\n}, [saved])\n\n   const onHeartClick = (item) =>{\n      if(saved.some(el => el.id === item.id)){\n         // if(item.id === saved[0].id){\n         //    setSaved([ ])\n         //    return \n         // }\n         const filtered = saved.filter(elem => elem.id !== item.id);\n         setSaved([...filtered])\n         return\n      } \n      setSaved([item, ...saved])\n   }\n\n   return <MovieSet>\n    { set.map(({id, title, vote_average, backdrop_path, poster_path}) => \n        \n    <MovieCard key={id}>\n      <Favorite onClick = {(e) => {\n               if(e.target.nodeName === 'path' || e.target.nodeName === 'svg'){\n                onHeartClick({id, title, vote_average, backdrop_path, poster_path}) } \n               }}>\n                  { saved.some(el => el.id === id) ?  <FillHeart/> : <FavoriteIcon/>}\n      </Favorite>  \n      <MovieLink to = {way ? `${way}/${id}` : `${id}`} state={state}>\n         <ImgContainer>\n         <Image src={backdrop_path&&poster_path ? `${EP_IMG}${backdrop_path || poster_path}` : photo}/>\n        {vote_average > 0  &&  <Rating>\n            <Star/>\n            {vote_average.toFixed(1)}</Rating>}      \n            <CardTitle>{title}</CardTitle>\n         </ImgContainer>\n      </MovieLink>\n      \n      </MovieCard>\n      )\n      }\n   </MovieSet>\n}\n\nMovieList.protoTypes = {\n   set: PropTypes.array.isRequired,\n   way: PropTypes.string,\n   state: PropTypes.object.isRequired\n}\n\nexport default MovieList\n","import styled from \"@emotion/styled\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nconst Text = styled.p`\nfont-weight: 500;\nmargin-bottom: 20px;\ntext-transform: uppercase;\n`\n const Form = styled.form`\n display: flex;\n margin-bottom: 40px;\n width: 350px;\n border-radius: 10px;\n overflow: hidden;`\n\n const Input = styled.input`\n font-size: 16px;\n padding: 10px;\n outline: none;\n width: 100%;\n border: none;\n `\n const Button = styled.button`\n border: 1px solid lightgrey;\n display: flex;\n justify-content: center; \n align-items: center;\n background-color: #02b3a2;\n cursor: pointer;\n `\n const IconSearch = styled(AiOutlineSearch)`\n width: 20px;\n height: 20px;\n fill: #fff;\n `\n export {Form, Input, Button, IconSearch, Text}","import { useState, useEffect } from \"react\";\nimport { getMovies } from \"API\";\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { Form, Input, Button, IconSearch, Text } from \"./MoviesSearch.style\";\nimport MovieList from \"components/MovieList/MovieList\";\n\nconst Movies  = () =>{\nconst [movieSet, setMovieSet] = useState([])\nconst [query, setQuery] = useSearchParams('');\nconst queryItem = query.get('query') ?? ''; \n\n    const onFormSubmit = e =>{\n        const queryValue = e.target.query.value.trim();\n        if(queryValue === ''){\n           return setQuery({})\n        }\n        setQuery({queryItem: queryValue})\n     }\n     useEffect(()=>{\n        getMovies(queryItem).then(setMovieSet)\n     },[query, queryItem])\n     \n     const location = useLocation()\n\n    return (\n        <div>\n        <Text>All good movies come to the one who search.</Text>\n        <Form onSubmit = {onFormSubmit}>\n             <Input type='text' name=\"query\"/>\n             <Button type='submit'>\n                <IconSearch/>\n            </Button>\n        </Form>\n        <MovieList set = {movieSet} state={{from: location}}/>\n        </div>\n    )\n}\nexport default Movies;"],"names":["API_KEY","ENTRY_POINT","trending","getTrendingMovies","axios","response","movies","data","results","getMovies","query","getMovieInfo","id","movie","getMovieCast","cast","getMovieReviews","MovieSet","styled","MovieCard","MovieLink","Link","ImgContainer","Image","Rating","Star","AiFillStar","CardTitle","Favorite","FavoriteIcon","AiOutlineHeart","FillHeart","AiFillHeart","MovieList","set","way","state","useState","saved","setSaved","useEffect","savedFavorite","JSON","parse","window","localStorage","getItem","length","setItem","stringify","map","title","vote_average","backdrop_path","poster_path","onClick","e","target","nodeName","item","some","el","filtered","filter","elem","onHeartClick","to","src","photo","toFixed","protoTypes","PropTypes","Text","Form","Input","Button","IconSearch","AiOutlineSearch","movieSet","setMovieSet","useSearchParams","setQuery","queryItem","get","then","location","useLocation","onSubmit","queryValue","value","trim","type","name","from"],"sourceRoot":""}
{"version":3,"file":"static/js/680.c25c6f8b.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.js","pages/FavoriteMovies/FavoriteMovies.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillStar, AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\n\nconst MovieSet = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nmargin: -10px;\n`\n const MovieCard = styled.li`\n position: relative;\n width: 300px;\nmargin: 10px;\n `\n const MovieLink = styled(Link)`\n text-decoration: none`\n \n const ImgContainer = styled.div`\n width: 100%;\n height: 350px;\n position: relative;\n `\n const Image = styled.img`\n display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;`\n\n  const Rating = styled.span`\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n  padding: 5px 10px;\n  background-color: #cf6679;\n  position: absolute;\n  top: 15px;\n  right: 0;`\n\n  const Star = styled(AiFillStar)`\n  width: 15px;\n  height: 15px;\n  margin-right: 10px;`\n\n\n  \n  const CardTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  padding: 15px 0;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n   h2 {\n    font-size: 18px;\n    font-weight: 600;\n    max-width: 290px;\n  }\n  `\n  const Favorite = styled.button`\n  position: absolute;\n  top: 15px;\n  left: 10px;\n  background-color: transparent;\n  border: none;\n  z-index: 12;\n  `\n  const FavoriteIcon = styled(AiOutlineHeart)`\n  width: 30px;\n  height: 30px;\n  fill: #fff;\n  `\nconst FillHeart = styled(AiFillHeart)`\nwidth: 30px;\nheight: 30px;\nfill: #fff;\n`\n  export {MovieSet, CardTitle, MovieCard, Image, Rating, ImgContainer, MovieLink, Star, Favorite, FavoriteIcon, FillHeart}","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { CardTitle, MovieCard, Image, Rating, ImgContainer, MovieSet, MovieLink, Star, Favorite, FavoriteIcon, FillHeart } from \"./MovieList.styled\";\nimport photo from 'not-found-image.jpg';\nconst EP_IMG= 'https://image.tmdb.org/t/p/w500';\n\n\n\nconst MovieList = ({set, state}) =>{\nconst [saved, setSaved]= useState([]);\n\nuseEffect(() => {\n   const savedFavorite = JSON.parse(window.localStorage.getItem('FavoriteMovie')) ?? [];\n   if(savedFavorite.length) {\n      setSaved(savedFavorite)  \n    }\n}, []);\n\nuseEffect(() =>{\n         if(saved.length){\n            window.localStorage.setItem('FavoriteMovie', JSON.stringify(saved)) \n         }\n}, [saved])\n\n   const onHeartClick = (item) =>{\n      if(saved.some(el => el.id === item.id)){\n         if(item.id === saved[0].id && saved.length === 1){\n            window.localStorage.removeItem('FavoriteMovie')\n         }\n         const filtered = saved.filter(elem => elem.id !== item.id);\n         setSaved([...filtered])\n         return\n      } \n      setSaved([item, ...saved])\n   }\n\n   return <MovieSet>\n    { set.map(({id, title, vote_average, backdrop_path, poster_path}) => \n        \n    <MovieCard key={id}>\n      <Favorite onClick = {(e) => {\n               if(e.target.nodeName === 'path' || e.target.nodeName === 'svg'){\n                onHeartClick({id, title, vote_average, backdrop_path, poster_path}) } \n               }}>\n                  { saved.some(el => el.id === id) ?  <FillHeart/> : <FavoriteIcon/>}\n      </Favorite>  \n      <MovieLink to ={`/movies/${id}`} state={state}>\n         <ImgContainer>\n         <Image src={backdrop_path&&poster_path ? `${EP_IMG}${backdrop_path || poster_path}` : photo}/>\n        {vote_average > 0  &&  <Rating>\n            <Star/>\n            {vote_average.toFixed(1)}</Rating>}      \n            <CardTitle><h2>{title}</h2></CardTitle>\n         </ImgContainer>\n      </MovieLink>\n      \n      </MovieCard>\n      )\n      }\n   </MovieSet>\n}\n\nMovieList.protoTypes = {\n   set: PropTypes.array.isRequired,\n   state: PropTypes.object.isRequired\n}\n\nexport default MovieList\n","import MovieList from \"components/MovieList/MovieList\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nconst Favorites = () => {\n  const [favorites, setFavorite] = useState([]);\n  useEffect(()=>{\n  const savedFavorite = JSON.parse(window.localStorage.getItem('FavoriteMovie')) ?? []\n\n  if(savedFavorite) {\n    setFavorite(savedFavorite);\n  }\n}, [])\n\nconst location = useLocation()\n    return <>\n    {!favorites.length ? <p>Add some movies</p> : <MovieList set = {favorites} state={{from: location}}/>}\n    </>\n}\nexport default Favorites"],"names":["MovieSet","styled","MovieCard","MovieLink","Link","ImgContainer","Image","Rating","Star","AiFillStar","CardTitle","Favorite","FavoriteIcon","AiOutlineHeart","FillHeart","AiFillHeart","MovieList","set","state","useState","saved","setSaved","useEffect","savedFavorite","JSON","parse","window","localStorage","getItem","length","setItem","stringify","map","id","title","vote_average","backdrop_path","poster_path","onClick","e","target","nodeName","item","some","el","removeItem","filtered","filter","elem","onHeartClick","to","src","photo","toFixed","protoTypes","PropTypes","favorites","setFavorite","location","useLocation","from"],"sourceRoot":""}
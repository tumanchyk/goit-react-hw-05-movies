{"version":3,"file":"static/js/824.c2cf6967.chunk.js","mappings":"kTACMA,EAAU,mCACVC,EAAc,gCACdC,EAAQ,UAAMD,EAAN,sCAA+CD,GAEhDG,EAAiB,mCAAG,uGACNC,EAAAA,EAAAA,GAAMF,GADA,cACvBG,EADuB,OAEvBC,EAASD,EAASE,KAAKC,QAFA,kBAGtBF,GAHsB,2CAAH,qDAKjBG,EAAS,mCAAG,WAAMC,GAAN,0FACEN,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,gCAAuCD,EAAvC,kBAAwDU,IAD/D,cACfL,EADe,OAEfC,EAASD,EAASE,KAAKC,QAFR,kBAGdF,GAHc,2CAAH,sDAKTK,EAAY,mCAAG,WAAMC,GAAN,0FACDR,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAwBW,EAAxB,oBAAsCZ,IAD1C,cAClBK,EADkB,OAElBQ,EAAQR,EAASE,KAFC,kBAGjBM,GAHiB,2CAAH,sDAKZC,EAAY,mCAAG,WAAMF,GAAN,0FACDR,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAwBW,EAAxB,4BAA8CZ,IADlD,cAClBK,EADkB,OAElBQ,EAAQR,EAASE,KAAKQ,KAFJ,kBAGjBF,GAHiB,2CAAH,sDAKZG,EAAe,mCAAG,WAAMJ,GAAN,0FACJR,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAwBW,EAAxB,4BAA8CZ,IAD/C,cACrBK,EADqB,OAErBQ,EAAQR,EAASE,KAAKC,QAFD,kBAGpBK,GAHoB,2CAAH,qD,gJCvBtBI,EAAWC,EAAAA,EAAAA,GAAH,iHAORC,EAAWD,EAAAA,EAAAA,GAAH,iFAKRE,EAAeF,EAAAA,EAAAA,IAAH,2EAKZG,EAAQH,EAAAA,EAAAA,IAAH,2FAMJI,EAAgBJ,EAAAA,EAAAA,IAAH,qCAGbK,EAAOL,EAAAA,EAAAA,GAAH,wGAMJM,EAAYN,EAAAA,EAAAA,EAAH,iE,mBCFhB,EAvBa,WACT,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KACOd,GAAMe,EAAAA,EAAAA,MAANf,GAKP,OAJAgB,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,IAAaF,GAAIiB,KAAKH,EACzB,GAAE,CAACd,KAEG,SAACK,EAAD,UACFF,GAAQA,EAAKe,KAAI,YAA0C,IAAxClB,EAAuC,EAAvCA,GAAImB,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACrC,OAAU,UAACd,EAAD,YACN,SAACC,EAAD,WACG,SAACC,EAAD,CAAOa,IAAKD,EAAY,UAd7B,mCAc6B,OAAeA,GAAiBE,OAE5D,UAACb,EAAD,YACA,SAACC,EAAD,UAAOQ,KACN,UAACP,EAAD,yBAAuBQ,UANFpB,EAQR,KAK5B,C","sources":["API.js","components/MovieCast/Cast.styled.jsx","components/MovieCast/MovieCast.js"],"sourcesContent":["import axios from \"axios\"\nconst API_KEY = '4c232873f45eedb749cb12734938c628'\nconst ENTRY_POINT = 'https://api.themoviedb.org/3/'\nconst trending = `${ENTRY_POINT}trending/movie/day?api_key=${API_KEY}`\n\nexport const getTrendingMovies = async()=>{\n    const response = await axios(trending);\n    const movies = response.data.results;\n    return movies\n}\nexport const getMovies = async(query)=>{\n    const response = await axios(`${ENTRY_POINT}search/movie?api_key=${API_KEY}&query=${query}`);\n    const movies = response.data.results;\n    return movies\n}\nexport const getMovieInfo = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}?api_key=${API_KEY}`);\n    const movie = response.data;\n    return movie\n}\nexport const getMovieCast = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}/credits?api_key=${API_KEY}`);\n    const movie = response.data.cast;\n    return movie\n}\nexport const getMovieReviews = async(id)=>{\n    const response = await axios(`${ENTRY_POINT}movie/${id}/reviews?api_key=${API_KEY}`);\n    const movie = response.data.results;\n    return movie\n}","import styled from \"@emotion/styled\";\n\nconst CastList = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: center;\nmargin: -7px;\npadding: 50px 0;\n`\nconst CastCard = styled.li`\nmargin: 7px;\nwidth: 237px;\nborder: 1px solid #3f3f3f;\n`\nconst ImgContainer = styled.div`\nwidth: 100%;\nheight: 300px;\nposition: relative;\n`\nconst Image = styled.img`\ndisplay: block;\n height: 100%;\n width: 100%;\n object-fit: cover;`\n\n const InfoContainer = styled.div`\n height: 85px`\n\n const Name = styled.h3`\n text-align: center;\n font-size: 18px;\n font-weight: 600;\n margin: 15px 0;\n `\n const Character = styled.p`\n font-size: 16px;\n margin-left: 15px;\n `\n\n export {CastList, CastCard, Image, ImgContainer, Name, Character, InfoContainer}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"API\";\nimport { CastList, CastCard, Image, ImgContainer, Name, Character,InfoContainer } from \"components/MovieCast/Cast.styled\";\nimport photo from 'not-found-image.jpg';\n\nconst EP_IMG= 'https://image.tmdb.org/t/p/w500';\n\n\nconst Cast = () =>{\n    const [cast, setCast] = useState([])\n    const {id} = useParams();\n    useEffect(()=> {\n        getMovieCast(id).then(setCast)\n    }, [id])\n\n    return <CastList>\n        {cast && cast.map(({id, name, character, profile_path}) => {\n            return (  <CastCard key={id}>\n                <ImgContainer>\n                   <Image src={profile_path ? `${EP_IMG}${profile_path}` : photo}/>\n                </ImgContainer>\n               <InfoContainer>\n               <Name>{name}</Name>\n                <Character>Character: {character}</Character>\n                </InfoContainer> \n               </CastCard>) }\n       )\n        }\n\n    </CastList>\n}\nexport default Cast"],"names":["API_KEY","ENTRY_POINT","trending","getTrendingMovies","axios","response","movies","data","results","getMovies","query","getMovieInfo","id","movie","getMovieCast","cast","getMovieReviews","CastList","styled","CastCard","ImgContainer","Image","InfoContainer","Name","Character","useState","setCast","useParams","useEffect","then","map","name","character","profile_path","src","photo"],"sourceRoot":""}